<?php

/**
 * Implements hook_menu().
 *
 * @return array
 */
function views_style_autoload_menu() {
  $items['admin/config/development/views_style_autoload_config'] = array(
    'title'            => 'Views style autoload',
    'description'      => 'Adjust views style autoload settings.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('views_style_autoload_settings'),
    'access arguments' => array('administer site configuration'),
    'file'             => 'views_style_autoload.pages.inc',
  );
  return $items;
}

/**
 * Implements hook_views_pre_view().
 *
 * Add styles to view.
 */
function views_style_autoload_views_pre_view(&$view, &$display_id, &$args) {
  $show_debug_information = variable_get('views_style_autoload_settings_debug', 0);
  if ($show_debug_information == 1) {
    $message = t('Used view: @view_name with display: @display.', array(
      '@view_name' => $view->name,
      '@display'   => $display_id,
    ));
    drupal_set_message($message);
  }

  if (!empty($view->name)) {
    $views_machine_name = $view->name;
    $views_machine_name = views_style_autoload_prepare_name($views_machine_name);

    // load global style.
    views_style_autoload_load_style($views_machine_name, 'views');

    // Load style for current display.
    $views_display_id = views_style_autoload_prepare_name($display_id);
    if (!empty($views_machine_name) && !empty($views_display_id)) {
      $current_view_style = $views_machine_name . '-' . $views_display_id;
      views_style_autoload_load_style($current_view_style, 'views');
    }

    // Add classes to view.
    $views_classes = $view->display_handler->get_option('css_class');
    if (!empty($views_machine_name)) {
      $views_classes .= ' ' . $views_machine_name;
    }
    if (!empty($current_view_style)) {
      $views_classes .= ' ' . $current_view_style;
    }
    $view->display_handler->set_option('css_class', $views_classes);
  }
}

/**
 * Attach to views form checkox.
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function views_style_autoload_form_alter(&$form, &$form_state, $form_id) {
  $views_style_autoload_views = variable_get('views_style_autoload_views', array());
//  dpm($views_style_autoload_views);

  if ($form_id == 'views_ui_edit_display_form') {
    if (!empty($form['options']['#section']) && $form['options']['#section'] == 'default-css_class') {
      if (!empty($form_state['view']->name)) {
        $form['options']['use_css_autoload'] = array(
          '#prefix'      => '<div id="use_css_autoload_wrap">111</div>',
          '#type'        => 'checkbox',
          '#title'       => t('Use style autoload'),
          '#description' => 'Check it, if you want use css autoload',
          '#ajax'        => array(
            'callback' => 'views_style_autoload_save_settings',
            'wrapper'  => 'use_css_autoload_wrap',
          ),
        );
      }
    }
  }
}

function views_style_autoload_save_settings($form, $form_state) {
  $views_style_autoload_views = variable_get('views_style_autoload_views', array());

  $views_style_autoload_views['fs'] = $form_state;
  $views_style_autoload_views['f'] = $form;
  $views_style_autoload_views['ff'] = 111;

  variable_set('views_style_autoload_views', $views_style_autoload_views);
}

/**
 * Load style.
 *
 * @param $file_name
 */
function views_style_autoload_load_style($file_name, $type) {
  // Define path
  static $style_path;
  if ($style_path == FALSE) {
    $style_path = $files_path = variable_get('views_style_autoload_files_path', '');
  }

  // Add file.
  $file_path = $style_path . '/' . $type . '/' . $file_name . '.css';
  if (file_exists($file_path)) {
    drupal_add_css($file_path);
  }

  // Show debug information.
  $show_debug_information = variable_get('views_style_autoload_settings_debug', 0);
  if ($show_debug_information == 1) {
    if (file_exists($file_path)) {
      $message = t('Loaded file: @style_path', array(
        '@style_path' => $file_path,
      ));
      $type = 'status';
    }
    else {
      $message = t('You can use: @style_path', array(
        '@style_path' => $file_path,
      ));
      $type = 'warning';
    }
    drupal_set_message($message, $type);
  }
}

function views_style_autoload_prepare_name($name) {
  $name = str_replace('_', '-', $name);
  return $name;
}